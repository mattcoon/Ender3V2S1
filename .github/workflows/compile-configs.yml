name: Build Configs

on:
  release:
    types: [published]

  workflow_dispatch:

jobs:
  Build-Default:
    name: Build Default Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [V422,V427]
    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO BL-Touch
      id: build_configs
      run: |
        if [ "$BOARD" = V422 ]; then BOARDTMP=v4.2.2; else BOARDTMP=v4.2.7; fi;
        echo "::set-output name=filename::E3V2-Default-${BOARDTMP}-${VERSION}.bin"
        cp configurations/Default/Configuration.h Marlin/Configuration.h
        cp configurations/Default/Configuration_adv.h Marlin/Configuration_adv.h
        sed -i "s/#define MOTHERBOARD.*/#define MOTHERBOARD BOARD_CREALITY_$BOARD/g" Marlin/Configuration.h
        pio run -e STM32F103RC_creality_$BOARD
        mkdir temp
        mv .pio/build/STM32F103RC_creality_$BOARD/*.bin temp/build.bin
      env:
        BOARD: ${{ matrix.board }}
        VERSION: ${{ env.RELEASE_VERSION }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-CNC:
    name: Build CNC Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [SKR_PRO]
    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO V1_CNC
      id: build_configs
      run: |
        BOARDTMP=SKR_PRO
        echo "::set-output name=filename::V1-CNC-${BOARDTMP}-${VERSION}.bin"
        cp configurations/CNC/Configuration.h Marlin/Configuration.h
        cp configurations/CNC/Configuration_adv.h Marlin/Configuration_adv.h
        sed -i "s/#define MOTHERBOARD.*/#define MOTHERBOARD BOARD_BTT_SKR_PRO_V1_2/g" Marlin/Configuration.h
        pio run -e BIGTREE_SKR_PRO
        mkdir temp
        mv .pio/build/BIGTREE_SKR_PRO/*.bin temp/build.bin
      env:
        BOARD: ${{ matrix.board }}
        VERSION: ${{ env.RELEASE_VERSION }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/build.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
